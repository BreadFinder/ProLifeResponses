import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { AppShell, Navbar, Header, createStyles, Burger, MediaQuery} from '@mantine/core'
import { useState } from 'react'
import { FaComments } from 'react-icons/fa'


// pages
import ArgumentsPage from './arguments'

// from https://ui.mantine.dev/category/navbars

const useStyles = createStyles((theme, _params, getRef) => {
  const icon = getRef('icon')

  return {
      header: {
          paddingBottom: theme.spacing.lg,
          marginBottom: theme.spacing.md,
          borderBottom: `1px solid ${theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[2]}`
      },

      footer: {
          paddingBottom: theme.spacing.lg,
          marginBottom: theme.spacing.md,
          borderBottom: `1px solid ${theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[2]}`
      },


      link: {
          ...theme.fn.focusStyles(),
          display: 'flex',
          alignItems: 'center',
          textDecoration: 'none',
          fontSize: theme.fontSizes.sm,
          color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],
          padding: `${theme.spacing.xs}px ${theme.spacing.sm}px`,
          borderRadius: theme.radius.sm,
          fontWeight: 500,

          '&:hover': {
              backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],
              color: theme.colorScheme === 'dark' ? theme.white : theme.black,

              [`& .${icon}`]: {
                  color: theme.colorScheme === 'dark' ? theme.white : theme.black
              }
          }
      },

      linkIcon: {
          ref: icon,
          color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],
          marginRight: theme.spacing.sm
      },

      linkActive: {
          '&, &:hovoer': {
              backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,
              color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,

              [`& .${icon}`]: {
                  color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color
              }
          }
      }
  }
})


const navItems = [
  { link: '', label: 'Arguments', icon: FaComments}
]






const Home: NextPage = () => {


  const {classes, cx} = useStyles()
  const [active, setActive] = useState('Arguments')



  const links = navItems.map(item => (
    <a
        className={cx(classes.link, { [classes.linkActive]: item.label === active })}
        href={item.link}
        key={item.label}
        onClick={(event) => {
            event.preventDefault()
            setActive(item.label)
        }}
    >
        <item.icon className={classes.linkIcon} />
        <span>{item.label}</span>
    </a>
  ))


  const [navOpened, setNavOpened] = useState(false)


  return (
    <div className={styles.container}>
      <Head>
        <title>Pro-life Responses</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* https://mantine.dev/core/app-shell/ */}
      {/* https://github.com/mantinedev/mantine/tree/master/src/mantine-demos/src/demos/core/AppShell */}
      <AppShell
        padding="md"
        navbarOffsetBreakpoint='sm'
        
        // https://codesandbox.io/s/affectionate-firefly-hoodr4?file=/src/App.tsx
        styles={(theme) => ({
          main: { backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[0], transition: 'padding-left 500ms ease-in' }
        })}
        navbar={
          <Navbar width={{ base: navOpened ? '90%' : '0', sm: 250, lg: 250}} height={'100%'}
            sx={{
              overflow: 'hidden',
              transition: 'width 500ms ease, min-width 500ms ease'
            }}
          >
            <Navbar.Section>
              {links}
            </Navbar.Section>
          </Navbar>
        }
        header={
          <Header height={60} p="xs">
            <div className={styles.layoutHeader}>
              {/* https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow */}
              <h2 style={{margin: 0, marginLeft: '15px', color: "#e0e0e0", display: 'inline-block', textShadow: '0 5px 5px #000'}}>Pro-life Responses</h2>
              <MediaQuery largerThan="sm" styles={{display: 'none'}}>
                <Burger
                  opened={navOpened}
                  size="sm"
                  onClick={()=> setNavOpened(o => !o)}
                  style={{marginLeft: 'auto', marginTop: '3px'}}
                ></Burger>
              </MediaQuery>
            </div>
          </Header>
        }
      >
        <ArgumentsPage></ArgumentsPage>
      </AppShell>
    </div>
  )
}

export default Home
